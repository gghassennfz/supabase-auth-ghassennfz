{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { supabase } from \"../lib/supabase\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Posts from \"./Posts\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Account(_ref) {\n  var _session$user;\n  var session = _ref.session;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    website = _useState6[0],\n    setWebsite = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    avatarUrl = _useState8[0],\n    setAvatarUrl = _useState8[1];\n  useEffect(function () {\n    if (session) getProfile();\n  }, [session]);\n  function getProfile() {\n    return _getProfile.apply(this, arguments);\n  }\n  function _getProfile() {\n    _getProfile = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!(session != null && session.user)) throw new Error(\"No user on the session!\");\n        var _yield$supabase$from$ = yield supabase.from(\"profiles\").select(`username, website, avatar_url`).eq(\"id\", session == null ? void 0 : session.user.id).single(),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error,\n          status = _yield$supabase$from$.status;\n        if (error && status !== 406) {\n          throw error;\n        }\n        if (data) {\n          setUsername(data.username);\n          setWebsite(data.website);\n          setAvatarUrl(data.avatar_url);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          Alert.alert(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    });\n    return _getProfile.apply(this, arguments);\n  }\n  function updateProfile(_x) {\n    return _updateProfile.apply(this, arguments);\n  }\n  function _updateProfile() {\n    _updateProfile = _asyncToGenerator(function* (_ref2) {\n      var username = _ref2.username,\n        website = _ref2.website,\n        avatar_url = _ref2.avatar_url;\n      try {\n        setLoading(true);\n        if (!(session != null && session.user)) throw new Error(\"No user on the session!\");\n        var updates = {\n          id: session == null ? void 0 : session.user.id,\n          username: username,\n          website: website,\n          avatar_url: avatar_url,\n          updated_at: new Date()\n        };\n        var _yield$supabase$from$2 = yield supabase.from(\"profiles\").upsert(updates),\n          error = _yield$supabase$from$2.error;\n        if (error) {\n          throw error;\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          Alert.alert(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    });\n    return _updateProfile.apply(this, arguments);\n  }\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: [styles.verticallySpaced, styles.mt20],\n        children: _jsx(TextInput, {\n          style: styles.input,\n          value: session == null ? void 0 : (_session$user = session.user) == null ? void 0 : _session$user.email,\n          editable: false\n        })\n      }), _jsx(View, {\n        style: styles.verticallySpaced,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          value: username || \"\",\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          },\n          placeholder: \"username\"\n        })\n      }), _jsx(View, {\n        style: styles.verticallySpaced,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          value: website || \"\",\n          onChangeText: function onChangeText(text) {\n            return setWebsite(text);\n          },\n          placeholder: \"website\"\n        })\n      }), _jsx(View, {\n        style: [styles.verticallySpaced, styles.mt20],\n        children: _jsx(Button, {\n          title: loading ? \"Loading ...\" : \"Update\",\n          onPress: function onPress() {\n            return updateProfile({\n              username: username,\n              website: website,\n              avatar_url: avatarUrl\n            });\n          },\n          disabled: loading\n        })\n      }), _jsx(View, {\n        style: styles.verticallySpaced,\n        children: _jsx(Button, {\n          title: \"Sign Out\",\n          onPress: function onPress() {\n            return supabase.auth.signOut();\n          }\n        })\n      }), _jsx(Posts, {\n        session: session\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    padding: 12\n  },\n  verticallySpaced: {\n    paddingTop: 4,\n    paddingBottom: 4,\n    alignSelf: \"stretch\"\n  },\n  mt20: {\n    marginTop: 20\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  }\n});","map":{"version":3,"names":["useState","useEffect","supabase","StyleSheet","View","Alert","TextInput","Button","ScrollView","Posts","jsx","_jsx","jsxs","_jsxs","Account","_ref","_session$user","session","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","username","setUsername","_useState5","_useState6","website","setWebsite","_useState7","_useState8","avatarUrl","setAvatarUrl","getProfile","_getProfile","apply","arguments","_asyncToGenerator","user","Error","_yield$supabase$from$","from","select","eq","id","single","data","error","status","avatar_url","alert","message","updateProfile","_x","_updateProfile","_ref2","updates","updated_at","Date","_yield$supabase$from$2","upsert","children","style","styles","container","verticallySpaced","mt20","input","value","email","editable","onChangeText","text","placeholder","title","onPress","disabled","auth","signOut","create","marginTop","padding","paddingTop","paddingBottom","alignSelf","height","borderColor","borderWidth"],"sources":["C:/Users/Ghassen/Desktop/supabe/app/src/components/Account.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../lib/supabase\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Alert,\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Session } from \"@supabase/supabase-js\";\r\nimport Posts from \"./Posts\";\r\n\r\nexport default function Account({ session }: { session: Session }) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [avatarUrl, setAvatarUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (session) getProfile();\r\n  }, [session]);\r\n\r\n  async function getProfile() {\r\n    try {\r\n      setLoading(true);\r\n      if (!session?.user) throw new Error(\"No user on the session!\");\r\n\r\n      const { data, error, status } = await supabase\r\n        .from(\"profiles\")\r\n        .select(`username, website, avatar_url`)\r\n        .eq(\"id\", session?.user.id)\r\n        .single();\r\n      if (error && status !== 406) {\r\n        throw error;\r\n      }\r\n\r\n      if (data) {\r\n        setUsername(data.username);\r\n        setWebsite(data.website);\r\n        setAvatarUrl(data.avatar_url);\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        Alert.alert(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function updateProfile({\r\n    username,\r\n    website,\r\n    avatar_url,\r\n  }: {\r\n    username: string;\r\n    website: string;\r\n    avatar_url: string;\r\n  }) {\r\n    try {\r\n      setLoading(true);\r\n      if (!session?.user) throw new Error(\"No user on the session!\");\r\n\r\n      const updates = {\r\n        id: session?.user.id,\r\n        username,\r\n        website,\r\n        avatar_url,\r\n        updated_at: new Date(),\r\n      };\r\n\r\n      const { error } = await supabase.from(\"profiles\").upsert(updates);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        Alert.alert(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        <View style={[styles.verticallySpaced, styles.mt20]}>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={session?.user?.email}\r\n            editable={false}\r\n          />\r\n        </View>\r\n        <View style={styles.verticallySpaced}>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={username || \"\"}\r\n            onChangeText={(text) => setUsername(text)}\r\n            placeholder=\"username\"\r\n          />\r\n        </View>\r\n        <View style={styles.verticallySpaced}>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={website || \"\"}\r\n            onChangeText={(text) => setWebsite(text)}\r\n            placeholder=\"website\"\r\n          />\r\n        </View>\r\n\r\n        <View style={[styles.verticallySpaced, styles.mt20]}>\r\n          <Button\r\n            title={loading ? \"Loading ...\" : \"Update\"}\r\n            onPress={() =>\r\n              updateProfile({ username, website, avatar_url: avatarUrl })\r\n            }\r\n            disabled={loading}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.verticallySpaced}>\r\n          <Button title=\"Sign Out\" onPress={() => supabase.auth.signOut()} />\r\n        </View>\r\n\r\n        {/* Add new Posts */}\r\n        <Posts session={session} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 40,\r\n    padding: 12,\r\n  },\r\n  verticallySpaced: {\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    alignSelf: \"stretch\",\r\n  },\r\n  mt20: {\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 20,\r\n    padding: 10,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}