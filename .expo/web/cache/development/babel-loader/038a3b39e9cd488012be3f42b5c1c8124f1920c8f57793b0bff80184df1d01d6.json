{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-url-polyfill/auto';\nimport { useState, useEffect } from 'react';\nimport { supabase } from \"./lib/supabase\";\nimport Auth from \"./components/Auth\";\nimport Account from \"./components/Account\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    session = _useState2[0],\n    setSession = _useState2[1];\n  useEffect(function () {\n    supabase.auth.getSession().then(function (_ref) {\n      var session = _ref.data.session;\n      setSession(session);\n    });\n    supabase.auth.onAuthStateChange(function (_event, session) {\n      setSession(session);\n    });\n  }, []);\n  return _jsx(View, {\n    children: session && session.user ? _jsx(Account, {\n      session: session\n    }, session.user.id) : _jsx(Auth, {})\n  });\n}","map":{"version":3,"names":["useState","useEffect","supabase","Auth","Account","View","jsx","_jsx","App","_useState","_useState2","_slicedToArray","session","setSession","auth","getSession","then","_ref","data","onAuthStateChange","_event","children","user","id"],"sources":["C:/Users/Ghassen/Desktop/supabe/app/src/index.tsx"],"sourcesContent":["import 'react-native-url-polyfill/auto'\r\nimport { useState, useEffect } from 'react'\r\nimport { supabase } from './lib/supabase'\r\nimport Auth from './components/Auth'\r\nimport Account from './components/Account'\r\nimport { View } from 'react-native'\r\nimport { Session } from '@supabase/supabase-js'\r\n\r\nexport default function App() {\r\n  const [session, setSession] = useState<Session | null>(null)\r\n\r\n  useEffect(() => {\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\r\n      setSession(session)\r\n    })\r\n\r\n    supabase.auth.onAuthStateChange((_event, session) => {\r\n      setSession(session)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <View>\r\n      {session && session.user ? <Account key={session.user.id} session={session} /> : <Auth />}\r\n    </View>\r\n  )\r\n}"],"mappings":";AAAA,OAAO,gCAAgC;AACvC,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ;AACjB,OAAOC,IAAI;AACX,OAAOC,OAAO;AAA4B,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAI1C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA8BT,QAAQ,CAAiB,IAAI,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BT,SAAS,CAAC,YAAM;IACdC,QAAQ,CAACY,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAC,IAAA,EAA2B;MAAA,IAAhBL,OAAO,GAAAK,IAAA,CAAfC,IAAI,CAAIN,OAAO;MAChDC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IAEFV,QAAQ,CAACY,IAAI,CAACK,iBAAiB,CAAC,UAACC,MAAM,EAAER,OAAO,EAAK;MACnDC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEL,IAAA,CAACF,IAAI;IAAAgB,QAAA,EACFT,OAAO,IAAIA,OAAO,CAACU,IAAI,GAAGf,IAAA,CAACH,OAAO;MAAuBQ,OAAO,EAAEA;IAAQ,GAAlCA,OAAO,CAACU,IAAI,CAACC,EAAuB,CAAC,GAAGhB,IAAA,CAACJ,IAAI,IAAE;EAAC,CACrF,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}