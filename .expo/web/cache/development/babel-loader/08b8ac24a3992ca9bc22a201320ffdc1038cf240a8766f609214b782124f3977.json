{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from '@react-native-google-signin/google-signin';\nimport { supabase } from \"../lib/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AuthGoogle() {\n  return _jsx(GoogleSigninButton, {\n    size: GoogleSigninButton.Size.Wide,\n    color: GoogleSigninButton.Color.Dark,\n    onPress: _asyncToGenerator(function* () {\n      try {\n        yield GoogleSignin.hasPlayServices();\n        var userInfo = yield GoogleSignin.signIn();\n        if (userInfo.idToken) {\n          var _yield$supabase$auth$ = yield supabase.auth.signInWithIdToken({\n              provider: 'google',\n              token: userInfo.idToken\n            }),\n            data = _yield$supabase$auth$.data,\n            error = _yield$supabase$auth$.error;\n          console.log(error, data);\n        } else {\n          throw new Error('no ID token present!');\n        }\n      } catch (error) {\n        if (error.code === statusCodes.SIGN_IN_CANCELLED) {} else if (error.code === statusCodes.IN_PROGRESS) {} else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {} else {}\n      }\n    })\n  });\n}","map":{"version":3,"names":["GoogleSignin","GoogleSigninButton","statusCodes","supabase","jsx","_jsx","AuthGoogle","size","Size","Wide","color","Color","Dark","onPress","_asyncToGenerator","hasPlayServices","userInfo","signIn","idToken","_yield$supabase$auth$","auth","signInWithIdToken","provider","token","data","error","console","log","Error","code","SIGN_IN_CANCELLED","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE"],"sources":["C:/Users/Ghassen/Desktop/supabe/app/src/components/AuthGoogle.tsx"],"sourcesContent":["import {\r\n    GoogleSignin,\r\n    GoogleSigninButton,\r\n    statusCodes,\r\n  } from '@react-native-google-signin/google-signin'\r\nimport { supabase } from '../lib/supabase'\r\n\r\n  \r\n  export default function AuthGoogle() {\r\n    // GoogleSignin.configure({\r\n    //   scopes: ['https://www.googleapis.com/auth/drive.readonly'],\r\n    //   webClientId: 'YOUR CLIENT ID FROM GOOGLE CONSOLE',\r\n    // })\r\n  \r\n    return (\r\n      <GoogleSigninButton\r\n        size={GoogleSigninButton.Size.Wide}\r\n        color={GoogleSigninButton.Color.Dark}\r\n        onPress={async () => {\r\n          try {\r\n            await GoogleSignin.hasPlayServices()\r\n            const userInfo = await GoogleSignin.signIn()\r\n            if (userInfo.idToken) {\r\n              const { data, error } = await supabase.auth.signInWithIdToken({\r\n                provider: 'google',\r\n                token: userInfo.idToken,\r\n              })\r\n              console.log(error, data)\r\n            } else {\r\n              throw new Error('no ID token present!')\r\n            }\r\n          } catch (error: any) {\r\n            if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n              // user cancelled the login flow\r\n            } else if (error.code === statusCodes.IN_PROGRESS) {\r\n              // operation (e.g. sign in) is in progress already\r\n            } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n              // play services not available or outdated\r\n            } else {\r\n              // some other error happened\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }"],"mappings":";AAAA,SACIA,YAAY,EACZC,kBAAkB,EAClBC,WAAW,QACN,2CAA2C;AACpD,SAASC,QAAQ;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAGxC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAMnC,OACED,IAAA,CAACJ,kBAAkB;IACjBM,IAAI,EAAEN,kBAAkB,CAACO,IAAI,CAACC,IAAK;IACnCC,KAAK,EAAET,kBAAkB,CAACU,KAAK,CAACC,IAAK;IACrCC,OAAO,EAAAC,iBAAA,CAAE,aAAY;MACnB,IAAI;QACF,MAAMd,YAAY,CAACe,eAAe,CAAC,CAAC;QACpC,IAAMC,QAAQ,SAAShB,YAAY,CAACiB,MAAM,CAAC,CAAC;QAC5C,IAAID,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAAC,qBAAA,SAA8BhB,QAAQ,CAACiB,IAAI,CAACC,iBAAiB,CAAC;cAC5DC,QAAQ,EAAE,QAAQ;cAClBC,KAAK,EAAEP,QAAQ,CAACE;YAClB,CAAC,CAAC;YAHMM,IAAI,GAAAL,qBAAA,CAAJK,IAAI;YAAEC,KAAK,GAAAN,qBAAA,CAALM,KAAK;UAInBC,OAAO,CAACC,GAAG,CAACF,KAAK,EAAED,IAAI,CAAC;QAC1B,CAAC,MAAM;UACL,MAAM,IAAII,KAAK,CAAC,sBAAsB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOH,KAAU,EAAE;QACnB,IAAIA,KAAK,CAACI,IAAI,KAAK3B,WAAW,CAAC4B,iBAAiB,EAAE,CAElD,CAAC,MAAM,IAAIL,KAAK,CAACI,IAAI,KAAK3B,WAAW,CAAC6B,WAAW,EAAE,CAEnD,CAAC,MAAM,IAAIN,KAAK,CAACI,IAAI,KAAK3B,WAAW,CAAC8B,2BAA2B,EAAE,CAEnE,CAAC,MAAM,CAEP;MACF;IACF,CAAC;EAAC,CACH,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}