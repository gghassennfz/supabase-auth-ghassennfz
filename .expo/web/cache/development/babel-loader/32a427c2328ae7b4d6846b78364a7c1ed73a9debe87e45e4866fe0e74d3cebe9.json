{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar App = function App() {\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: 'YOUR_EXPO_CLIENT_ID',\n      iosClientId: 'YOUR_IOS_CLIENT_ID',\n      androidClientId: 'YOUR_ANDROID_CLIENT_ID',\n      webClientId: 'YOUR_WEB_CLIENT_ID'\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userInfo = _useState2[0],\n    setUserInfo = _useState2[1];\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n      fetchUserInfo(authentication.accessToken);\n    }\n  }, [response]);\n  var fetchUserInfo = function () {\n    var _ref = _asyncToGenerator(function* (token) {\n      try {\n        var _response = yield fetch('https://www.googleapis.com/userinfo/v2/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        var user = yield _response.json();\n        setUserInfo(user);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchUserInfo(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: userInfo ? _jsxs(Text, {\n      children: [\"Welcome, \", userInfo.name]\n    }) : _jsx(Button, {\n      disabled: !request,\n      title: \"Sign in with Google\",\n      onPress: function onPress() {\n        promptAsync();\n      }\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Button","View","Text","Google","WebBrowser","jsxs","_jsxs","jsx","_jsx","maybeCompleteAuthSession","App","_Google$useAuthReques","useAuthRequest","expoClientId","iosClientId","androidClientId","webClientId","_Google$useAuthReques2","_slicedToArray","request","response","promptAsync","_useState","_useState2","userInfo","setUserInfo","type","authentication","fetchUserInfo","accessToken","_ref","_asyncToGenerator","token","fetch","headers","Authorization","user","json","error","console","_x","apply","arguments","style","flex","justifyContent","alignItems","children","name","disabled","title","onPress"],"sources":["C:/Users/Ghassen/Desktop/supabe/app/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, View, Text } from 'react-native';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nWebBrowser.maybeCompleteAuthSession(); // Required for Expo Go\r\n\r\nconst App = () => {\r\n  const [request, response, promptAsync] = Google.useAuthRequest({\r\n    expoClientId: 'YOUR_EXPO_CLIENT_ID', // For Expo Go\r\n    iosClientId: 'YOUR_IOS_CLIENT_ID', // For iOS standalone app\r\n    androidClientId: 'YOUR_ANDROID_CLIENT_ID', // For Android standalone app\r\n    webClientId: 'YOUR_WEB_CLIENT_ID', // For web and standalone apps\r\n  });\r\n\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (response?.type === 'success') {\r\n      const { authentication } = response;\r\n      fetchUserInfo(authentication.accessToken);\r\n    }\r\n  }, [response]);\r\n\r\n  const fetchUserInfo = async (token) => {\r\n    try {\r\n      const response = await fetch('https://www.googleapis.com/userinfo/v2/me', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const user = await response.json();\r\n      setUserInfo(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      {userInfo ? (\r\n        <Text>Welcome, {userInfo.name}</Text>\r\n      ) : (\r\n        <Button\r\n          disabled={!request}\r\n          title=\"Sign in with Google\"\r\n          onPress={() => {\r\n            promptAsync();\r\n          }}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,OAAO,KAAKC,MAAM,MAAM,oCAAoC;AAC5D,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAE/CJ,UAAU,CAACK,wBAAwB,CAAC,CAAC;AAErC,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,qBAAA,GAAyCR,MAAM,CAACS,cAAc,CAAC;MAC7DC,YAAY,EAAE,qBAAqB;MACnCC,WAAW,EAAE,oBAAoB;MACjCC,eAAe,EAAE,wBAAwB;MACzCC,WAAW,EAAE;IACf,CAAC,CAAC;IAAAC,sBAAA,GAAAC,cAAA,CAAAP,qBAAA;IALKQ,OAAO,GAAAF,sBAAA;IAAEG,QAAQ,GAAAH,sBAAA;IAAEI,WAAW,GAAAJ,sBAAA;EAOrC,IAAAK,SAAA,GAAgCxB,QAAQ,CAAC,IAAI,CAAC;IAAAyB,UAAA,GAAAL,cAAA,CAAAI,SAAA;IAAvCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5BxB,SAAS,CAAC,YAAM;IACd,IAAI,CAAAqB,QAAQ,oBAARA,QAAQ,CAAEM,IAAI,MAAK,SAAS,EAAE;MAChC,IAAQC,cAAc,GAAKP,QAAQ,CAA3BO,cAAc;MACtBC,aAAa,CAACD,cAAc,CAACE,WAAW,CAAC;IAC3C;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,IAAMQ,aAAa;IAAA,IAAAE,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;MACrC,IAAI;QACF,IAAMZ,SAAQ,SAASa,KAAK,CAAC,2CAA2C,EAAE;UACxEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUH,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,IAAMI,IAAI,SAAShB,SAAQ,CAACiB,IAAI,CAAC,CAAC;QAClCZ,WAAW,CAACW,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBAVKV,aAAaA,CAAAY,EAAA;MAAA,OAAAV,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUlB;EAED,OACElC,IAAA,CAACP,IAAI;IAAC0C,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACtEvB,QAAQ,GACPlB,KAAA,CAACJ,IAAI;MAAA6C,QAAA,GAAC,WAAS,EAACvB,QAAQ,CAACwB,IAAI;IAAA,CAAO,CAAC,GAErCxC,IAAA,CAACR,MAAM;MACLiD,QAAQ,EAAE,CAAC9B,OAAQ;MACnB+B,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb9B,WAAW,CAAC,CAAC;MACf;IAAE,CACH;EACF,CACG,CAAC;AAEX,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}